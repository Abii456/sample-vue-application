{"ast":null,"code":"import NavigationBar from '@/components/NavigationBar.vue';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { POST_BASE_URL } from '@/apiConfig';\nexport default {\n  components: {\n    NavigationBar\n  },\n  data() {\n    return {\n      userName: '',\n      activeTab: 'home',\n      postTitle: '',\n      postType: 'news',\n      postMessage: '',\n      isFetchingPosts: false,\n      posts: [],\n      userId: null,\n      selectedPostId: null\n    };\n  },\n  methods: {\n    fetchUserNameFromLocalStorage() {\n      const user = JSON.parse(localStorage.getItem('userData'));\n      if (user && user.first_name) {\n        this.userName = user.first_name;\n        this.userId = user.id;\n      }\n    },\n    createPost() {\n      const payload = {\n        title: this.postTitle,\n        type: this.postType,\n        message: this.postMessage,\n        author_id: JSON.parse(localStorage.getItem('userData')).id\n      };\n      axios.post(`${POST_BASE_URL}create`, payload).then(response => {\n        this.postTitle = '';\n        this.postType = 'news';\n        this.postMessage = '';\n        this.fetchAllPosts();\n      }).catch(error => {\n        console.log(error.response);\n        Swal.fire({\n          title: 'Error',\n          text: 'Error when creating post. Please try again later.',\n          icon: 'error'\n        });\n      });\n    },\n    fetchAllPosts() {\n      this.isFetchingPosts = true;\n      axios.get(`${POST_BASE_URL}index`).then(response => {\n        this.posts = response.data.data.map(post => ({\n          ...post,\n          isEditing: false,\n          showDeleteConfirmation: false\n        }));\n      }).catch(error => {\n        console.log(error.response);\n        Swal.fire({\n          title: 'Error',\n          text: 'Error fetching posts. Please try again later.',\n          icon: 'error'\n        });\n      }).finally(() => {\n        this.isFetchingPosts = false;\n      });\n    },\n    formatPostType(type) {\n      switch (type) {\n        case 'news':\n          return 'News';\n        case 'update':\n          return 'Update';\n        case 'task':\n          return 'Task';\n        default:\n          return '';\n      }\n    },\n    editPost(post) {\n      // Set isEditing to true for the post to show the modal form\n      this.selectedPostId = post.id;\n\n      // Save the original post data in case the user cancels editing\n      post.originalTitle = post.title;\n      post.originalType = post.type;\n      post.originalPost = post.post;\n    }\n  },\n  created() {\n    this.fetchUserNameFromLocalStorage();\n    this.fetchAllPosts();\n  },\n  computed: {\n    formattedPosts() {\n      return this.posts.map(post => ({\n        ...post,\n        type: this.formatPostType(post.type)\n      }));\n    }\n  }\n};","map":{"version":3,"names":["NavigationBar","axios","Swal","POST_BASE_URL","components","data","userName","activeTab","postTitle","postType","postMessage","isFetchingPosts","posts","userId","selectedPostId","methods","fetchUserNameFromLocalStorage","user","JSON","parse","localStorage","getItem","first_name","id","createPost","payload","title","type","message","author_id","post","then","response","fetchAllPosts","catch","error","console","log","fire","text","icon","get","map","isEditing","showDeleteConfirmation","finally","formatPostType","editPost","originalTitle","originalType","originalPost","created","computed","formattedPosts"],"sources":["src/components/WelcomePage.vue"],"sourcesContent":["<!-- <template>\r\n  <div class=\"container p-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <NavigationBar :activeTab=\"activeTab\" />\r\n      </div>\r\n\r\n      <div class=\"col-md-8\">\r\n        <div class=\"row align-items-center mb-4\">\r\n          <div class=\"col-2\">\r\n            <img src=\"../assets/icons/profile_icon.png\" alt=\"People Icon\" class=\"img-fluid\" />\r\n          </div>\r\n          <div class=\"col-10\">\r\n            <h3 class=\"mb-0\">Welcome back, {{ userName }}!</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <hr class=\"my-4\">\r\n\r\n        <div class=\"card mb-4\">\r\n          <div class=\"card-header\">\r\n            <h4>Create a Post</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form @submit.prevent=\"createPost\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"title\" class=\"form-label\">Title</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"postTitle\" required />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"postType\" class=\"form-label\">Post Type</label>\r\n                <select class=\"form-select\" id=\"postType\" v-model=\"postType\" required>\r\n                  <option value=\"news\">News</option>\r\n                  <option value=\"update\">Update</option>\r\n                  <option value=\"task\">Task</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"postMessage\" class=\"form-label\">Post</label>\r\n                <textarea class=\"form-control\" id=\"postMessage\" v-model=\"postMessage\" required></textarea>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Create Post</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"isFetchingPosts\">\r\n          <p class=\"text-muted mt-3\">Fetching latest posts...</p>\r\n        </div>\r\n        <div v-else>\r\n          <div v-if=\"posts.length > 0\">\r\n            <h4 class=\"mt-4\">Latest Posts</h4>\r\n            <div v-for=\"post in posts\" :key=\"post.id\" class=\"card mb-3\">\r\n              <div class=\"card-header\">\r\n                <h5>{{ post.title }}</h5>\r\n                <small>Posted by {{ post.author_name }}</small>\r\n                <small>{{ post.type }}</small>\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <p>{{ post.post }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div v-else>\r\n            <p class=\"text-muted mt-4\">No posts available.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template> -->\r\n\r\n<template>\r\n  <div class=\"container p-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <NavigationBar :activeTab=\"activeTab\" />\r\n      </div>\r\n\r\n      <div class=\"col-md-8\">\r\n        <div class=\"row align-items-center mb-4\">\r\n          <div class=\"col-2\">\r\n            <img src=\"../assets/icons/profile_icon.png\" alt=\"People Icon\" class=\"img-fluid\" />\r\n          </div>\r\n          <div class=\"col-10\">\r\n            <h3 class=\"mb-0\">Welcome back, {{ userName }}!</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <hr class=\"my-4\">\r\n\r\n        <div class=\"card mb-4\">\r\n          <div class=\"card-header\">\r\n            <h4>Create a Post</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form @submit.prevent=\"createPost\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"title\" class=\"form-label\">Title</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"postTitle\" required />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"postType\" class=\"form-label\">Post Type</label>\r\n                <select class=\"form-select\" id=\"postType\" v-model=\"postType\" required>\r\n                  <option value=\"news\">News</option>\r\n                  <option value=\"update\">Update</option>\r\n                  <option value=\"task\">Task</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"postMessage\" class=\"form-label\">Post</label>\r\n                <textarea class=\"form-control\" id=\"postMessage\" v-model=\"postMessage\" required></textarea>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Create Post</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"isFetchingPosts\">\r\n          <p class=\"text-muted mt-3\">Fetching latest posts...</p>\r\n        </div>\r\n        <div v-else>\r\n          <div v-if=\"formattedPosts.length > 0\">\r\n            <h4 class=\"mt-4\">Latest Posts</h4>\r\n            <div v-for=\"post in formattedPosts\" :key=\"post.id\" class=\"card mb-3\">\r\n              <div class=\"card-header\">\r\n                <h5>{{ post.title }}</h5>\r\n                <small v-if=\"post.author_id === userId\">Posted by you | {{ post.type }}</small>\r\n                <small v-else>Posted by {{ post.author_name }} | {{ post.type }}</small>\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <p>{{ post.post }}</p>\r\n              </div>\r\n              <div class=\"card-footer text-end\">\r\n                <div v-if=\"post.author_id === userId\">\r\n                  <span class=\"options\">Edit</span>\r\n                  <span> | </span>\r\n                  <span class=\"options\">Delete</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div v-else>\r\n            <p class=\"text-muted mt-4\">No posts available.</p>\r\n          </div>\r\n\r\n          <div class=\"modal\" :class=\"{ 'show': selectedPostId === post.id }\" style=\"display: block;\">\r\n            <div class=\"modal-dialog\">\r\n              <div class=\"modal-content\">\r\n                <form @submit.prevent=\"savePost(post)\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">Edit Post</h5>\r\n                    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" @click=\"cancelEdit(post)\"></button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"editTitle\" class=\"form-label\">Title</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"editTitle\" v-model=\"post.title\" required />\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"editType\" class=\"form-label\">Type</label>\r\n                      <select class=\"form-select\" id=\"editType\" v-model=\"post.type\" required>\r\n                        <option value=\"news\">News</option>\r\n                        <option value=\"update\">Update</option>\r\n                        <option value=\"task\">Task</option>\r\n                      </select>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                      <label for=\"editPostMessage\" class=\"form-label\">Post</label>\r\n                      <textarea class=\"form-control\" id=\"editPostMessage\" v-model=\"post.post\" required></textarea>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n                    <button type=\"button\" class=\"btn btn-secondary\" @click=\"cancelEdit(post)\">Cancel</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavigationBar from '@/components/NavigationBar.vue';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { POST_BASE_URL } from '@/apiConfig';\r\n\r\nexport default {\r\n  components: {\r\n    NavigationBar,\r\n  },\r\n  data() {\r\n    return {\r\n      userName: '',\r\n      activeTab: 'home',\r\n      postTitle: '',\r\n      postType: 'news',\r\n      postMessage: '',\r\n      isFetchingPosts: false,\r\n      posts: [],\r\n      userId: null,\r\n      selectedPostId: null,\r\n    };\r\n  },\r\n  methods: {\r\n    fetchUserNameFromLocalStorage() {\r\n      const user = JSON.parse(localStorage.getItem('userData'));\r\n      if (user && user.first_name) {\r\n        this.userName = user.first_name;\r\n        this.userId = user.id;\r\n      }\r\n    },\r\n    createPost() {\r\n      const payload = {\r\n        title: this.postTitle,\r\n        type: this.postType,\r\n        message: this.postMessage,\r\n        author_id: JSON.parse(localStorage.getItem('userData')).id,\r\n      };\r\n\r\n      axios.post(`${POST_BASE_URL}create`, payload)\r\n        .then((response) => {\r\n          this.postTitle = '';\r\n          this.postType = 'news';\r\n          this.postMessage = '';\r\n          this.fetchAllPosts();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Error when creating post. Please try again later.',\r\n            icon: 'error',\r\n          });\r\n        });\r\n    },\r\n    fetchAllPosts() {\r\n      this.isFetchingPosts = true;\r\n      axios\r\n        .get(`${POST_BASE_URL}index`)\r\n        .then((response) => {\r\n          this.posts = response.data.data.map(post => ({\r\n            ...post,\r\n            isEditing: false,\r\n            showDeleteConfirmation: false,\r\n          }));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Error fetching posts. Please try again later.',\r\n            icon: 'error',\r\n          });\r\n        })\r\n        .finally(() => {\r\n          this.isFetchingPosts = false;\r\n        });\r\n    },\r\n    formatPostType(type) {\r\n      switch (type) {\r\n        case 'news':\r\n          return 'News';\r\n        case 'update':\r\n          return 'Update';\r\n        case 'task':\r\n          return 'Task';\r\n        default:\r\n          return '';\r\n      }\r\n    },\r\n    editPost(post) {\r\n      // Set isEditing to true for the post to show the modal form\r\n      this.selectedPostId = post.id;\r\n\r\n      // Save the original post data in case the user cancels editing\r\n      post.originalTitle = post.title;\r\n      post.originalType = post.type;\r\n      post.originalPost = post.post;\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchUserNameFromLocalStorage();\r\n    this.fetchAllPosts();\r\n  },\r\n  computed: {\r\n    formattedPosts() {\r\n      return this.posts.map((post) => ({\r\n        ...post,\r\n        type: this.formatPostType(post.type),\r\n      }));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<!-- <script>\r\nimport NavigationBar from '@/components/NavigationBar.vue';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { POST_BASE_URL } from '@/apiConfig';\r\n\r\nexport default {\r\n  components: {\r\n    NavigationBar,\r\n  },\r\n  data() {\r\n    return {\r\n      userName: '',\r\n      activeTab: 'home',\r\n      postTitle: '',\r\n      postType: 'news',\r\n      postMessage: '',\r\n      isFetchingPosts: false,\r\n      posts: [],\r\n      userId: null,\r\n    };\r\n  },\r\n  methods: {\r\n    fetchUserNameFromLocalStorage() {\r\n      const user = JSON.parse(localStorage.getItem('userData'));\r\n      if (user && user.first_name) {\r\n        this.userName = user.first_name;\r\n        this.userId = user.id;\r\n      }\r\n    },\r\n    createPost() {\r\n      const payload = {\r\n        title: this.postTitle,\r\n        type: this.postType,\r\n        message: this.postMessage,\r\n        author_id: JSON.parse(localStorage.getItem('userData')).id,\r\n      };\r\n\r\n      axios.post(`${POST_BASE_URL}create`, payload)\r\n        .then((response) => {\r\n          this.postTitle = '';\r\n          this.postType = 'news';\r\n          this.postMessage = '';\r\n          this.fetchAllPosts();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Error when creating post. Please try again later.',\r\n            icon: 'error',\r\n          });\r\n        });\r\n    },\r\n    fetchAllPosts() {\r\n      this.isFetchingPosts = true;\r\n      axios\r\n        .get(`${POST_BASE_URL}index`)\r\n        .then((response) => {\r\n          this.posts = response.data.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Error fetching posts. Please try again later.',\r\n            icon: 'error',\r\n          });\r\n        })\r\n        .finally(() => {\r\n          this.isFetchingPosts = false;\r\n        });\r\n    },\r\n    formatPostType(type) {\r\n      switch (type) {\r\n        case 'news':\r\n          return 'News';\r\n        case 'update':\r\n          return 'Update';\r\n        case 'task':\r\n          return 'Task';\r\n        default:\r\n          return '';\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchUserNameFromLocalStorage();\r\n    this.fetchAllPosts();\r\n  },\r\n  computed: {\r\n    formattedPosts() {\r\n      return this.posts.map((post) => ({\r\n        ...post,\r\n        type: this.formatPostType(post.type),\r\n      }));\r\n    },\r\n  },\r\n};\r\n</script> -->\r\n\r\n<style>\r\n.options {\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"AA2LA,OAAAA,aAAA;AACA,OAAAC,KAAA;AACA,OAAAC,IAAA;AACA,SAAAC,aAAA;AAEA;EACAC,UAAA;IACAJ;EACA;EACAK,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,SAAA;MACAC,QAAA;MACAC,WAAA;MACAC,eAAA;MACAC,KAAA;MACAC,MAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA;IACAC,8BAAA;MACA,MAAAC,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,IAAAJ,IAAA,IAAAA,IAAA,CAAAK,UAAA;QACA,KAAAhB,QAAA,GAAAW,IAAA,CAAAK,UAAA;QACA,KAAAT,MAAA,GAAAI,IAAA,CAAAM,EAAA;MACA;IACA;IACAC,WAAA;MACA,MAAAC,OAAA;QACAC,KAAA,OAAAlB,SAAA;QACAmB,IAAA,OAAAlB,QAAA;QACAmB,OAAA,OAAAlB,WAAA;QACAmB,SAAA,EAAAX,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,cAAAE;MACA;MAEAtB,KAAA,CAAA6B,IAAA,IAAA3B,aAAA,UAAAsB,OAAA,EACAM,IAAA,CAAAC,QAAA;QACA,KAAAxB,SAAA;QACA,KAAAC,QAAA;QACA,KAAAC,WAAA;QACA,KAAAuB,aAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAH,QAAA;QACA9B,IAAA,CAAAoC,IAAA;UACAZ,KAAA;UACAa,IAAA;UACAC,IAAA;QACA;MACA;IACA;IACAP,cAAA;MACA,KAAAtB,eAAA;MACAV,KAAA,CACAwC,GAAA,IAAAtC,aAAA,SACA4B,IAAA,CAAAC,QAAA;QACA,KAAApB,KAAA,GAAAoB,QAAA,CAAA3B,IAAA,CAAAA,IAAA,CAAAqC,GAAA,CAAAZ,IAAA;UACA,GAAAA,IAAA;UACAa,SAAA;UACAC,sBAAA;QACA;MACA,GACAV,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAH,QAAA;QACA9B,IAAA,CAAAoC,IAAA;UACAZ,KAAA;UACAa,IAAA;UACAC,IAAA;QACA;MACA,GACAK,OAAA;QACA,KAAAlC,eAAA;MACA;IACA;IACAmC,eAAAnB,IAAA;MACA,QAAAA,IAAA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MACA;IACA;IACAoB,SAAAjB,IAAA;MACA;MACA,KAAAhB,cAAA,GAAAgB,IAAA,CAAAP,EAAA;;MAEA;MACAO,IAAA,CAAAkB,aAAA,GAAAlB,IAAA,CAAAJ,KAAA;MACAI,IAAA,CAAAmB,YAAA,GAAAnB,IAAA,CAAAH,IAAA;MACAG,IAAA,CAAAoB,YAAA,GAAApB,IAAA,CAAAA,IAAA;IACA;EACA;EACAqB,QAAA;IACA,KAAAnC,6BAAA;IACA,KAAAiB,aAAA;EACA;EACAmB,QAAA;IACAC,eAAA;MACA,YAAAzC,KAAA,CAAA8B,GAAA,CAAAZ,IAAA;QACA,GAAAA,IAAA;QACAH,IAAA,OAAAmB,cAAA,CAAAhB,IAAA,CAAAH,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}