{"ast":null,"code":"import NavigationBar from '@/components/NavigationBar.vue';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { POST_BASE_URL } from '@/apiConfig';\nexport default {\n  components: {\n    NavigationBar\n  },\n  data() {\n    return {\n      userName: '',\n      activeTab: 'home',\n      postTitle: '',\n      postType: 'news',\n      postMessage: ''\n    };\n  },\n  methods: {\n    fetchUserNameFromLocalStorage() {\n      const user = JSON.parse(localStorage.getItem('userData'));\n      if (user && user.first_name) {\n        this.userName = user.first_name;\n      }\n    },\n    createPost() {\n      // Prepare the payload\n      const payload = {\n        title: this.postTitle,\n        type: this.postType,\n        message: this.postMessage,\n        author_id: JSON.parse(localStorage.getItem('userData')).id\n      };\n\n      // Make the API call to create the post\n      axios.post(`${POST_BASE_URL}create`, payload).then(response => {\n        console.log('Response:', response.data);\n\n        // Optionally, you can show a success message here using Swal.fire\n        // Swal.fire({\n        //   title: 'Success',\n        //   text: 'Post created successfully.',\n        //   icon: 'success',\n        // });\n\n        // Clear the form fields after successful creation\n        this.postTitle = '';\n        this.postType = 'news';\n        this.postMessage = '';\n      }).catch(error => {\n        console.log(error.response);\n        Swal.fire({\n          title: 'Error',\n          text: 'Error when creating post. Please try again later.',\n          icon: 'error'\n        });\n      });\n    }\n  },\n  created() {\n    this.fetchUserNameFromLocalStorage();\n  }\n};","map":{"version":3,"names":["NavigationBar","axios","Swal","POST_BASE_URL","components","data","userName","activeTab","postTitle","postType","postMessage","methods","fetchUserNameFromLocalStorage","user","JSON","parse","localStorage","getItem","first_name","createPost","payload","title","type","message","author_id","id","post","then","response","console","log","catch","error","fire","text","icon","created"],"sources":["src/components/WelcomePage.vue"],"sourcesContent":["<!-- <template>\r\n  <div class=\"container p-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <NavigationBar :activeTab=\"activeTab\" />\r\n      </div>\r\n\r\n      <div class=\"row align-items-center col-md-8\">\r\n        <div class=\"col-2\">\r\n          <img src=\"../assets/icons/profile_icon.png\" alt=\"People Icon\" class=\"img-fluid\" />\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <h3 class=\"mb-0\">Welcome back, {{ userName }}!</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template> -->\r\n\r\n<template>\r\n  <div class=\"container p-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <NavigationBar :activeTab=\"activeTab\" />\r\n      </div>\r\n\r\n      <div class=\"col-md-8\">\r\n        <div class=\"row align-items-center mb-4\">\r\n          <div class=\"col-2\">\r\n            <img src=\"../assets/icons/profile_icon.png\" alt=\"People Icon\" class=\"img-fluid\" />\r\n          </div>\r\n          <div class=\"col-10\">\r\n            <h3 class=\"mb-0\">Welcome back, {{ userName }}!</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <hr class=\"my-4\"> <!-- Separator between sections -->\r\n\r\n        <div class=\"card mb-4\">\r\n          <div class=\"card-header\">\r\n            <h4>Create a Post</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form @submit.prevent=\"createPost\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"title\" class=\"form-label\">Title</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"postTitle\" required />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"postType\" class=\"form-label\">Post Type</label>\r\n                <select class=\"form-select\" id=\"postType\" v-model=\"postType\" required>\r\n                  <option value=\"news\">News</option>\r\n                  <option value=\"update\">Update</option>\r\n                  <option value=\"task\">Task</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"postMessage\" class=\"form-label\">Post</label>\r\n                <textarea class=\"form-control\" id=\"postMessage\" v-model=\"postMessage\" required></textarea>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Create Post</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<!-- <script>\r\nimport NavigationBar from '@/components/NavigationBar.vue';\r\nimport { POST_BASE_URL } from '@/apiConfig';\r\n\r\nexport default {\r\n  components: {\r\n    NavigationBar,\r\n  },\r\n  data() {\r\n    return {\r\n      userName: '',\r\n      activeTab: 'home',\r\n      postTitle: '',\r\n      postType: 'news',\r\n      postMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    fetchUserNameFromLocalStorage() {\r\n      const user = JSON.parse(localStorage.getItem('userData'));\r\n      if (user && user.first_name) {\r\n        this.userName = user.first_name;\r\n      }\r\n    },\r\n    createPost() {\r\n      // Check if all required fields are filled out\r\n      // if (!this.postTitle || !this.postType || !this.postMessage) {\r\n      //   console.log('Please fill out all required fields.');\r\n      //   return;\r\n      // }\r\n\r\n      // Prepare the payload\r\n      const payload = {\r\n        title: this.postTitle,\r\n        type: this.postType,\r\n        message: this.postMessage,\r\n        author_id: JSON.parse(localStorage.getItem('userData')).id,\r\n      };\r\n\r\n      // Log the payload to the console\r\n      console.log('Payload:', payload);\r\n\r\n      // Your code to send the payload to the server using axios or any other method goes here\r\n      // After successful creation, you may want to show a success message\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchUserNameFromLocalStorage();\r\n  },\r\n};\r\n</script> -->\r\n\r\n<script>\r\nimport NavigationBar from '@/components/NavigationBar.vue';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { POST_BASE_URL } from '@/apiConfig';\r\n\r\nexport default {\r\n  components: {\r\n    NavigationBar,\r\n  },\r\n  data() {\r\n    return {\r\n      userName: '',\r\n      activeTab: 'home',\r\n      postTitle: '',\r\n      postType: 'news',\r\n      postMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    fetchUserNameFromLocalStorage() {\r\n      const user = JSON.parse(localStorage.getItem('userData'));\r\n      if (user && user.first_name) {\r\n        this.userName = user.first_name;\r\n      }\r\n    },\r\n    createPost() {\r\n      // Prepare the payload\r\n      const payload = {\r\n        title: this.postTitle,\r\n        type: this.postType,\r\n        message: this.postMessage,\r\n        author_id: JSON.parse(localStorage.getItem('userData')).id,\r\n      };\r\n\r\n      // Make the API call to create the post\r\n      axios.post(`${POST_BASE_URL}create`, payload)\r\n        .then((response) => {\r\n          console.log('Response:', response.data);\r\n\r\n          // Optionally, you can show a success message here using Swal.fire\r\n          // Swal.fire({\r\n          //   title: 'Success',\r\n          //   text: 'Post created successfully.',\r\n          //   icon: 'success',\r\n          // });\r\n\r\n          // Clear the form fields after successful creation\r\n          this.postTitle = '';\r\n          this.postType = 'news';\r\n          this.postMessage = '';\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          Swal.fire({\r\n            title: 'Error',\r\n            text: 'Error when creating post. Please try again later.',\r\n            icon: 'error',\r\n          });\r\n        });\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchUserNameFromLocalStorage();\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>"],"mappings":"AA2HA,OAAAA,aAAA;AACA,OAAAC,KAAA;AACA,OAAAC,IAAA;AACA,SAAAC,aAAA;AAEA;EACAC,UAAA;IACAJ;EACA;EACAK,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,SAAA;MACAC,QAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,8BAAA;MACA,MAAAC,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,IAAAJ,IAAA,IAAAA,IAAA,CAAAK,UAAA;QACA,KAAAZ,QAAA,GAAAO,IAAA,CAAAK,UAAA;MACA;IACA;IACAC,WAAA;MACA;MACA,MAAAC,OAAA;QACAC,KAAA,OAAAb,SAAA;QACAc,IAAA,OAAAb,QAAA;QACAc,OAAA,OAAAb,WAAA;QACAc,SAAA,EAAAV,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,cAAAQ;MACA;;MAEA;MACAxB,KAAA,CAAAyB,IAAA,IAAAvB,aAAA,UAAAiB,OAAA,EACAO,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,cAAAF,QAAA,CAAAvB,IAAA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA,KAAAG,SAAA;QACA,KAAAC,QAAA;QACA,KAAAC,WAAA;MACA,GACAqB,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAC,GAAA,CAAAE,KAAA,CAAAJ,QAAA;QACA1B,IAAA,CAAA+B,IAAA;UACAZ,KAAA;UACAa,IAAA;UACAC,IAAA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAxB,6BAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}