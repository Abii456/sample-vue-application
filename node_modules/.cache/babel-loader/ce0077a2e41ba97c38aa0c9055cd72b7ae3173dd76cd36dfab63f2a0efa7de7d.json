{"ast":null,"code":"// import Vue from 'vue';\n// import Router from 'vue-router';\n// import LoginForm from '@/components/LoginForm.vue'; \n// import RegistrationForm from '@/components/RegistrationForm.vue';\n// import WelcomePage from '@/components/WelcomePage.vue';\n\n// Vue.use(Router);\n\n// export default new Router({\n//   routes: [\n//     { path: '/login', component: LoginForm },\n//     { path: '/register', component: RegistrationForm },\n//     { path: '/welcome', component: WelcomePage },\n//     { path: '*', redirect: 'login' }, // Redirect any unknown route to '/login'\n//   ]\n// });\n\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport LoginForm from '@/components/LoginForm.vue';\nimport RegistrationForm from '@/components/RegistrationForm.vue';\nimport WelcomePage from '@/components/WelcomePage.vue';\nVue.use(Router);\nconst router = new Router({\n  routes: [{\n    path: '/login',\n    component: LoginForm\n  }, {\n    path: '/register',\n    component: RegistrationForm\n  }, {\n    path: '/welcome',\n    component: WelcomePage\n  }, {\n    path: '*',\n    redirect: 'login'\n  } // Redirect any unknown route to '/login'\n  ]\n});\n\n// Add navigation guard to prevent accessing Welcome page without being logged in\nrouter.beforeEach((to, from, next) => {\n  if (to.path === '/welcome') {\n    if (!isLoggedIn()) {\n      next('/login');\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\n\n// Implement your own isLoggedIn function to check if the user is logged in\nfunction isLoggedIn() {\n  const authToken = localStorage.getItem('authToken');\n  return !!authToken; // Return true if the token exists, false if it doesn't\n}\n\nexport default router;","map":{"version":3,"names":["Vue","Router","LoginForm","RegistrationForm","WelcomePage","use","router","routes","path","component","redirect","beforeEach","to","from","next","isLoggedIn","authToken","localStorage","getItem"],"sources":["C:/Users/cmaca/OneDrive/Documents/Passafund/sample-application/src/router/index.js"],"sourcesContent":["// import Vue from 'vue';\r\n// import Router from 'vue-router';\r\n// import LoginForm from '@/components/LoginForm.vue'; \r\n// import RegistrationForm from '@/components/RegistrationForm.vue';\r\n// import WelcomePage from '@/components/WelcomePage.vue';\r\n\r\n// Vue.use(Router);\r\n\r\n// export default new Router({\r\n//   routes: [\r\n//     { path: '/login', component: LoginForm },\r\n//     { path: '/register', component: RegistrationForm },\r\n//     { path: '/welcome', component: WelcomePage },\r\n//     { path: '*', redirect: 'login' }, // Redirect any unknown route to '/login'\r\n//   ]\r\n// });\r\n\r\nimport Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport LoginForm from '@/components/LoginForm.vue';\r\nimport RegistrationForm from '@/components/RegistrationForm.vue';\r\nimport WelcomePage from '@/components/WelcomePage.vue';\r\n\r\nVue.use(Router);\r\n\r\nconst router = new Router({\r\n  routes: [\r\n    { path: '/login', component: LoginForm },\r\n    { path: '/register', component: RegistrationForm },\r\n    { path: '/welcome', component: WelcomePage },\r\n    { path: '*', redirect: 'login' }, // Redirect any unknown route to '/login'\r\n  ]\r\n});\r\n\r\n// Add navigation guard to prevent accessing Welcome page without being logged in\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.path === '/welcome') {\r\n    if (!isLoggedIn()) {\r\n      next('/login');\r\n    } else {\r\n      next();\r\n    }\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\n// Implement your own isLoggedIn function to check if the user is logged in\r\nfunction isLoggedIn() {\r\n  const authToken = localStorage.getItem('authToken');\r\n  return !!authToken; // Return true if the token exists, false if it doesn't\r\n}\r\n\r\nexport default router;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,gBAAgB,MAAM,mCAAmC;AAChE,OAAOC,WAAW,MAAM,8BAA8B;AAEtDJ,GAAG,CAACK,GAAG,CAACJ,MAAM,CAAC;AAEf,MAAMK,MAAM,GAAG,IAAIL,MAAM,CAAC;EACxBM,MAAM,EAAE,CACN;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAEP;EAAU,CAAC,EACxC;IAAEM,IAAI,EAAE,WAAW;IAAEC,SAAS,EAAEN;EAAiB,CAAC,EAClD;IAAEK,IAAI,EAAE,UAAU;IAAEC,SAAS,EAAEL;EAAY,CAAC,EAC5C;IAAEI,IAAI,EAAE,GAAG;IAAEE,QAAQ,EAAE;EAAQ,CAAC,CAAE;EAAA;AAEtC,CAAC,CAAC;;AAEF;AACAJ,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACJ,IAAI,KAAK,UAAU,EAAE;IAC1B,IAAI,CAACO,UAAU,CAAC,CAAC,EAAE;MACjBD,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;;AAEF;AACA,SAASC,UAAUA,CAAA,EAAG;EACpB,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACnD,OAAO,CAAC,CAACF,SAAS,CAAC,CAAC;AACtB;;AAEA,eAAeV,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}