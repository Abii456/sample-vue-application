{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { USER_BASE_URL } from '@/apiConfig';\nexport default {\n  data() {\n    return {\n      form: {\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        address: ''\n      },\n      errors: {}\n    };\n  },\n  methods: {\n    create_user() {\n      axios.post(`${USER_BASE_URL}register`, this.form).then(resp => {\n        //console.log(resp.data);\n        if (resp.data.status === 'success') {\n          Swal.fire({\n            title: 'Success',\n            text: 'User is successfully created.',\n            icon: 'success'\n          }).then(() => {\n            this.$nextTick(() => {\n              localStorage.setItem('authToken', resp.data.data.token);\n              localStorage.setItem('userData', JSON.stringify(resp.data.data));\n              this.$router.push('/welcome');\n            });\n          });\n        } else {\n          this.errors = resp.data.error;\n          this.showValidationErrors();\n        }\n      }).catch(e => {\n        console.log(e);\n        Swal.fire({\n          title: 'Oops!',\n          text: e,\n          icon: 'error'\n        });\n      });\n    },\n    showValidationErrors() {\n      let errorMessages = [];\n      for (const field in this.errors) {\n        errorMessages.push(this.errors[field][0]);\n      }\n      const errorMessage = errorMessages.map(error => `• ${error}`).join('<br>');\n      Swal.fire({\n        title: errorMessages.length > 1 ? 'Please fix the following error/s:' : 'Please fix the following error:',\n        html: `<div class=\"error-messages\">${errorMessage}</div>`,\n        icon: 'warning'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Swal","USER_BASE_URL","data","form","first_name","last_name","email","password","address","errors","methods","create_user","post","then","resp","status","fire","title","text","icon","$nextTick","localStorage","setItem","token","JSON","stringify","$router","push","error","showValidationErrors","catch","e","console","log","errorMessages","field","errorMessage","map","join","length","html"],"sources":["src/components/RegistrationForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"container p-5 border\" style=\"margin-top: 10%; border-radius: 10px;\">\r\n    <h3 class=\"text-center mt-2 mb-5\">Registration</h3>\r\n    <div class=\"col-md-12\">\r\n\r\n      <div class=\"mb-3 text-danger font-weight-bold\">\r\n        * Required fields.\r\n      </div>\r\n\r\n      <form v-on:submit.prevent=\"create_user\">\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"first_name\" class=\"form-label\">First Name *</label>\r\n          <input type=\"text\" name=\"first_name\" class=\"form-control\" id=\"first_name\"\r\n            placeholder=\"Enter First Name\" v-model=\"form.first_name\" required>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"last_name\" class=\"form-label\">Last Name *</label>\r\n          <input type=\"text\" name=\"last_name\" class=\"form-control\" id=\"last_name\" placeholder=\"Enter Last Name\"\r\n            v-model=\"form.last_name\" required>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"address\" class=\"form-label\">Address *</label>\r\n          <input type=\"text\" name=\"address\" class=\"form-control\" id=\"address\" placeholder=\"Enter Address\"\r\n            v-model=\"form.address\" required>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Email Address *</label>\r\n          <input type=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"\r\n            placeholder=\"Enter Email\" v-model=\"form.email\" required>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\" class=\"form-label\">Password *</label>\r\n          <input type=\"password\" name=\"password\" class=\"form-control\" id=\"password\" aria-describedby=\"passHelp\"\r\n            placeholder=\"Enter Password\" v-model=\"form.password\" required>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button><br>\r\n        <router-link to=\"/login\" class=\"ml-3\">Already have an account? Sign In here</router-link>\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { USER_BASE_URL } from '@/apiConfig';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        password: '',\r\n        address: ''\r\n      },\r\n      errors: {}\r\n    };\r\n  },\r\n  methods: {\r\n    create_user() {\r\n      axios\r\n        .post(`${USER_BASE_URL}register`, this.form)\r\n        .then((resp) => {\r\n          //console.log(resp.data);\r\n          if (resp.data.status === 'success') {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              text: 'User is successfully created.',\r\n              icon: 'success',\r\n            }).then(() => {\r\n              this.$nextTick(() => {\r\n                localStorage.setItem('authToken', resp.data.data.token);\r\n                localStorage.setItem('userData', JSON.stringify(resp.data.data));\r\n                this.$router.push('/welcome');\r\n              });\r\n            });\r\n          } else {\r\n            this.errors = resp.data.error;\r\n            this.showValidationErrors();\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          Swal.fire({\r\n            title: 'Oops!',\r\n            text: e,\r\n            icon: 'error',\r\n          });\r\n        });\r\n    },\r\n    showValidationErrors() {\r\n      let errorMessages = [];\r\n      for (const field in this.errors) {\r\n        errorMessages.push(this.errors[field][0]);\r\n      }\r\n      const errorMessage = errorMessages.map((error) => `• ${error}`).join('<br>');\r\n      Swal.fire({\r\n        title: errorMessages.length > 1 ? 'Please fix the following error/s:' : 'Please fix the following error:',\r\n        html: `<div class=\"error-messages\">${errorMessage}</div>`,\r\n        icon: 'warning'\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>.error-messages {\r\n  text-align: left;\r\n}</style>"],"mappings":";AAkDA;AACA,OAAAA,KAAA;AACA,OAAAC,IAAA;AACA,SAAAC,aAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,UAAA;QACAC,SAAA;QACAC,KAAA;QACAC,QAAA;QACAC,OAAA;MACA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACAZ,KAAA,CACAa,IAAA,IAAAX,aAAA,iBAAAE,IAAA,EACAU,IAAA,CAAAC,IAAA;QACA;QACA,IAAAA,IAAA,CAAAZ,IAAA,CAAAa,MAAA;UACAf,IAAA,CAAAgB,IAAA;YACAC,KAAA;YACAC,IAAA;YACAC,IAAA;UACA,GAAAN,IAAA;YACA,KAAAO,SAAA;cACAC,YAAA,CAAAC,OAAA,cAAAR,IAAA,CAAAZ,IAAA,CAAAA,IAAA,CAAAqB,KAAA;cACAF,YAAA,CAAAC,OAAA,aAAAE,IAAA,CAAAC,SAAA,CAAAX,IAAA,CAAAZ,IAAA,CAAAA,IAAA;cACA,KAAAwB,OAAA,CAAAC,IAAA;YACA;UACA;QACA;UACA,KAAAlB,MAAA,GAAAK,IAAA,CAAAZ,IAAA,CAAA0B,KAAA;UACA,KAAAC,oBAAA;QACA;MACA,GACAC,KAAA,CAAAC,CAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,CAAA;QACA/B,IAAA,CAAAgB,IAAA;UACAC,KAAA;UACAC,IAAA,EAAAa,CAAA;UACAZ,IAAA;QACA;MACA;IACA;IACAU,qBAAA;MACA,IAAAK,aAAA;MACA,WAAAC,KAAA,SAAA1B,MAAA;QACAyB,aAAA,CAAAP,IAAA,MAAAlB,MAAA,CAAA0B,KAAA;MACA;MACA,MAAAC,YAAA,GAAAF,aAAA,CAAAG,GAAA,CAAAT,KAAA,SAAAA,KAAA,IAAAU,IAAA;MACAtC,IAAA,CAAAgB,IAAA;QACAC,KAAA,EAAAiB,aAAA,CAAAK,MAAA;QACAC,IAAA,iCAAAJ,YAAA;QACAjB,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}